import java.util.*;

class Node {
    int data;
    Node left, right;

    Node(int data) {
        this.data = data;
        left = right = null;
    }
}

class Tree {
    Node root;

    Node insert(Node root, int val) {
        if (root == null) {
            return new Node(val);
        }
        if (val < root.data) {
            root.left = insert(root.left, val);
        } else if (val > root.data) {
            root.right = insert(root.right, val);
        }
        return root;
    }

    void inorder(Node root) {
        if (root != null) {
            inorder(root.left);
            System.out.print(root.data + " ");
            inorder(root.right);
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Tree t = new Tree();
        t.root = t.insert(t.root, 6);
        t.insert(t.root, 58);
        t.insert(t.root, 72);
        t.insert(t.root, 308);
        t.insert(t.root, 111);

        System.out.println("Inorder Traversal:");
        t.inorder(t.root);
    }
}
